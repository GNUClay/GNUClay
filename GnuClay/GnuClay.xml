<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GnuClay</name>
    </assembly>
    <members>
        <member name="M:GnuClay.CommonClases.Storages.BaseJsonFileStorage`1.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonClases.Storages.BaseJsonFileStorage`1.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonClases.Storages.BaseJsonFileStorage`1.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonClases.Storages.BaseJsonFileStorage`1.ToShortString">
            <summary>
            Returns a string that represents the current instance in short way.
            </summary>
            <returns>A string that represents the current instance in short way.</returns>
        </member>
        <member name="M:GnuClay.CommonClases.Storages.BaseJsonFileStorage`1.ToShortString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance in short way.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance in short way.</returns>
        </member>
        <member name="M:GnuClay.CommonClases.Storages.BaseJsonFileStorage`1.PropertiesToShortString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance in short way without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance in short way without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonClases.Storages.BaseJsonFileStorage`1.ToBriefString">
            <summary>
            Returns a string that represents the current instance in very short way.
            </summary>
            <returns>A string that represents the current instance in very short way.</returns>
        </member>
        <member name="M:GnuClay.CommonClases.Storages.BaseJsonFileStorage`1.ToBriefString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance in very short way.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance in very short way.</returns>
        </member>
        <member name="M:GnuClay.CommonClases.Storages.BaseJsonFileStorage`1.PropertiesToBriefString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance in very short way without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance in very short way without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.DebugHelpers.IObjectToBriefString.ToBriefString">
            <summary>
            Returns a string that represents the current instance in very short way.
            </summary>
            <returns>A string that represents the current instance in very short way.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.DebugHelpers.IObjectToBriefString.ToBriefString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance in very short way.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance in very short way.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.DebugHelpers.IObjectToBriefString.PropertiesToBriefString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance in very short way without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance in very short way without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.DebugHelpers.IObjectToString.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.DebugHelpers.IObjectToString.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.DebugHelpers.IShortObjectToString.ToShortString">
            <summary>
            Returns a string that represents the current instance in short way.
            </summary>
            <returns>A string that represents the current instance in short way.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.DebugHelpers.IShortObjectToString.ToShortString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance in short way.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance in short way.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.DebugHelpers.IShortObjectToString.PropertiesToShortString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance in short way without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance in short way without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObject.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObject.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObject.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectDictionary.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectDictionary.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectDictionary.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectList.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectList.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectList.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectProp.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectProp.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectProp.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectsTree.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectsTree.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.JsonSerializationHelpers.PlaneObjectsTree.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.DiagnosticsCallInfo.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.DiagnosticsCallInfo.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.DiagnosticsCallInfo.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.Debug(System.DateTime,System.UInt64,System.Int32,System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="dateTime">Date and time of the message.</param>
            <param name="messageId">Unique id of the message.</param>
            <param name="threadId">Id of the thread in which was generated the message.</param>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing debug message.</param>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.Log(System.DateTime,System.UInt64,System.Int32,System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="dateTime">Date and time of the message.</param>
            <param name="messageId">Unique id of the message.</param>
            <param name="threadId">Id of the thread in which was generated the message.</param>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing log message.</param>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.Info(System.DateTime,System.UInt64,System.Int32,System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="dateTime">Date and time of the message.</param>
            <param name="messageId">Unique id of the message.</param>
            <param name="threadId">Id of the thread in which was generated the message.</param>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing an information message.</param>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.Warn(System.DateTime,System.UInt64,System.Int32,System.String)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="dateTime">Date and time of the message.</param>
            <param name="messageId">Unique id of the message.</param>
            <param name="threadId">Id of the thread in which was generated the message.</param>
            <param name="message">A string containing description of a warning.</param>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.Error(System.DateTime,System.UInt64,System.Int32,System.String)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="dateTime">Date and time of the message.</param>
            <param name="messageId">Unique id of the message.</param>
            <param name="threadId">Id of the thread in which was generated the message.</param>
            <param name="message">A string containing description of error.</param>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.Fatal(System.DateTime,System.UInt64,System.Int32,System.String)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="dateTime">Date and time of the message.</param>
            <param name="messageId">Unique id of the message.</param>
            <param name="threadId">Id of the thread in which was generated the message.</param>
            <param name="message">A string containing description of fatal error.</param>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.Dispose">
            <summary>
            Release this instance.
            </summary>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.Finalize">
            <summary>
            Finalizer for this instance.
            </summary>
        </member>
        <member name="P:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.IsDisposed">
            <summary>
            Returns true if the instance was released, owerthise returns false.
            </summary>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapper.Dispose(System.Boolean)">
            <summary>
             Dispose this instance.
            </summary>
            <param name="disposing">Is the instance released not in finalizer.</param>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapperOptions.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapperOptions.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.CommonHelpers.LoggingHelpers.NLogWrapperOptions.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="T:GnuClay.CommonHelpers.ReflectionHelpers.TypeHelper">
            <summary>
            Provides methods for more comfortable working with System.Type.
            </summary>
        </member>
        <member name="M:GnuClay.CommonHelpers.ReflectionHelpers.TypeHelper.RemoveLibInfoFromFullName(System.String)">
            <summary>
            Removes information about version, culture, PublicKeyToken and library name from type name.
            </summary>
            <param name="fullName">Initial type name.</param>
            <returns>Typename without version, culture, PublicKeyToken and library name.</returns>
        </member>
        <member name="T:GnuClay.Engine">
            <summary>
            The class of instance of GnuClayEngine.
            Represents an NPC.
            </summary>
        </member>
        <member name="M:GnuClay.Engine.#ctor(GnuClay.EngineOptions)">
            <summary>
            Construct an instance of the class.
            </summary>
            <param name="options">Options of the engine.</param>
        </member>
        <member name="P:GnuClay.Engine.State">
            <summary>
            Gets state of the engine.
            </summary>
        </member>
        <member name="M:GnuClay.Engine.Dispose">
            <summary>
            Release this instance.
            </summary>
        </member>
        <member name="M:GnuClay.Engine.Finalize">
            <summary>
            Finalizer for this instance.
            </summary>
        </member>
        <member name="P:GnuClay.Engine.IsDisposed">
            <summary>
            Returns true if the instance was released, owerthise returns false.
            </summary>
        </member>
        <member name="M:GnuClay.Engine.Dispose(System.Boolean)">
            <summary>
             Dispose this instance.
            </summary>
            <param name="disposing">Is the instance released not in finalizer.</param>
        </member>
        <member name="T:GnuClay.EngineOptions">
            <summary>
            Options of the Engine.
            </summary>
        </member>
        <member name="P:GnuClay.EngineOptions.AppFileName">
            <summary>
            File name of application of the NPC.
            </summary>
        </member>
        <member name="P:GnuClay.EngineOptions.Host">
            <summary>
            Reference to instance of host.
            </summary>
        </member>
        <member name="M:GnuClay.EngineOptions.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.EngineOptions.ToString(System.UInt32)">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:GnuClay.EngineOptions.PropertiesToString(System.UInt32)">
            <summary>
            Internal method which returns a string that represents the current instance without additional information, only pair name of property - value.
            </summary>
            <param name="n">Count of spaces in the string for more comfortable representation.</param>
            <returns>A string that represents the current instance without additional information, only pair name of property - value.</returns>
        </member>
        <member name="T:GnuClay.IHost">
            <summary>
            Represent host of the NPC.
            </summary>
        </member>
        <member name="T:GnuClay.ILog">
            <summary>
            Provides logging interface.
            </summary>
        </member>
        <member name="M:GnuClay.ILog.Debug(System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">A string containing debug message.</param>
        </member>
        <member name="M:GnuClay.ILog.Debug(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing debug message.</param>
        </member>
        <member name="M:GnuClay.ILog.Debug(System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Debug(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">A string containing debug message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Debug(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Debug(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing debug message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Log(System.String)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="message">A string containing log message.</param>
        </member>
        <member name="M:GnuClay.ILog.Log(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing log message.</param>
        </member>
        <member name="M:GnuClay.ILog.Log(System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Log(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="message">A string containing log message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Log(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Log(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing log message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Info(System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">A string containing an information message.</param>
        </member>
        <member name="M:GnuClay.ILog.Info(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing an information message.</param>
        </member>
        <member name="M:GnuClay.ILog.Info(System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:GnuClay.ILog.Info(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">A string containing description of .</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Info(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Info(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing an information message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Warn(System.String)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="message">A string containing description of a warning.</param>
        </member>
        <member name="M:GnuClay.ILog.Warn(System.Exception)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Error(System.String)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="message">A string containing description of error.</param>
        </member>
        <member name="M:GnuClay.ILog.Error(System.Exception)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.ILog.Fatal(System.String)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="message">A string containing description of fatal error.</param>
        </member>
        <member name="M:GnuClay.ILog.Fatal(System.Exception)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="T:GnuClay.Internal.BaseEngineComponent">
            <summary>
            Represents a base component of the engine. 
            </summary>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineComponent.#ctor(GnuClay.Internal.CommonContext,GnuClay.ILog)">
            <summary>
            Construct an instance of the component.
            </summary>
            <param name="context">Common context of the engine.</param>
            <param name="logger">Logger for the component.</param>
        </member>
        <member name="F:GnuClay.Internal.BaseEngineComponent.Context">
            <summary>
            Common context of the engine.
            </summary>
        </member>
        <member name="P:GnuClay.Internal.BaseEngineComponent.Logger">
            <summary>
            Logger for the component.
            </summary>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineComponent.Dispose">
            <summary>
            Release this instance.
            </summary>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineComponent.Finalize">
            <summary>
            Finalizer for this instance.
            </summary>
        </member>
        <member name="P:GnuClay.Internal.BaseEngineComponent.IsDisposed">
            <summary>
            Returns true if the instance was released, owerthise returns false.
            </summary>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineComponent.Dispose(System.Boolean)">
            <summary>
             Dispose this instance.
            </summary>
            <param name="disposing">Is the instance released not in finalizer.</param>
        </member>
        <member name="T:GnuClay.Internal.BaseEngineLoggedComponent">
            <summary>
            Represents a base logged component of the engine.
            </summary>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Debug(System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">A string containing debug message.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Debug(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing debug message.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Debug(System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Debug(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">A string containing debug message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Debug(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Debug(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing debug message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Log(System.String)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="message">A string containing log message.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Log(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing log message.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Log(System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Log(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="message">A string containing log message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Log(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Log(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing log message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Info(System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">A string containing an information message.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Info(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing an information message.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Info(System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Info(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">A string containing description of .</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Info(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Info(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing an information message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Warn(System.String)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="message">A string containing description of a warning.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Warn(System.Exception)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Error(System.String)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="message">A string containing description of error.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Error(System.Exception)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Fatal(System.String)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="message">A string containing description of fatal error.</param>
        </member>
        <member name="M:GnuClay.Internal.BaseEngineLoggedComponent.Fatal(System.Exception)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="T:GnuClay.Internal.CommonContext">
            <summary>
            Common context of the engine.
            </summary>
        </member>
        <member name="P:GnuClay.Internal.CommonContext.Options">
            <summary>
            Options of the engine.
            </summary>
        </member>
        <member name="M:GnuClay.Internal.CommonContext.AddComponent(GnuClay.Internal.BaseEngineComponent)">
            <summary>
            Adds a component of GnuClay engine to the context for initialization and releasing.
            </summary>
            <param name="component">Reference to added component.</param>
        </member>
        <member name="P:GnuClay.Internal.CommonContext.LoggerComponent">
            <summary>
            Reference to component for logging.
            </summary>
        </member>
        <member name="P:GnuClay.Internal.CommonContext.CompilerComponent">
            <summary>
            Reference to component for compiller.
            </summary>
        </member>
        <member name="M:GnuClay.Internal.CommonContext.Dispose">
            <summary>
            Release this instance.
            </summary>
        </member>
        <member name="M:GnuClay.Internal.CommonContext.Finalize">
            <summary>
            Finalizer for this instance.
            </summary>
        </member>
        <member name="P:GnuClay.Internal.CommonContext.IsDisposed">
            <summary>
            Returns true if the instance was released, owerthise returns false.
            </summary>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Debug(System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">A string containing debug message.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Debug(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing debug message.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Debug(System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Debug(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">A string containing debug message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Debug(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Debug(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing debug message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Log(System.String)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="message">A string containing log message.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Log(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing log message.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Log(System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Log(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="message">A string containing log message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Log(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Log(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing log message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Info(System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">A string containing an information message.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Info(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing an information message.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Info(System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Info(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">A string containing description of .</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Info(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Info(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing an information message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Warn(System.String)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="message">A string containing description of a warning.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Warn(System.Exception)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Error(System.String)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="message">A string containing description of error.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Error(System.Exception)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Fatal(System.String)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="message">A string containing description of fatal error.</param>
        </member>
        <member name="M:GnuClay.Internal.LoggingSystem.Logger.Fatal(System.Exception)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="P:GnuClay.LoggedObject.Logger">
            <summary>
            Logger for the component.
            </summary>
        </member>
        <member name="M:GnuClay.LoggedObject.Debug(System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">A string containing debug message.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Debug(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing debug message.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Debug(System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Debug(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">A string containing debug message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Debug(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Debug(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="depth">Depth of Debug level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing debug message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Log(System.String)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="message">A string containing log message.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Log(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing log message.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Log(System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Log(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="message">A string containing log message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Log(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Log(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Log level.
            </summary>
            <param name="depth">Depth of Log level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing log message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Info(System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">A string containing an information message.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Info(System.UInt32,System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing an information message.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Info(System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:GnuClay.LoggedObject.Info(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">A string containing description of .</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Info(System.UInt32,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Info(System.UInt32,System.String,System.Exception)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="depth">Depth of Info level. It needs for controlling level of detailing for more comfortable showing and debugging.</param>
            <param name="message">A string containing an information message.</param>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Warn(System.String)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="message">A string containing description of a warning.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Warn(System.Exception)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Error(System.String)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="message">A string containing description of error.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Error(System.Exception)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Fatal(System.String)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="message">A string containing description of fatal error.</param>
        </member>
        <member name="M:GnuClay.LoggedObject.Fatal(System.Exception)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="exception">An exception to be logged.</param>
        </member>
    </members>
</doc>
